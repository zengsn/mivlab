package servlet;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

import com.wm.utils.DbConn;

import net.sf.json.JSONObject;
import utils.Dbhelper;

/**
 * Servlet implementation class BgImgUpload
 */
@WebServlet("/BgImgUpload")
public class BgImgUpload extends HttpServlet {
private static final long serialVersionUID = 1L;
	
    // 上传文件存储目录
   // private static final String UPLOAD_DIRECTORY = "/customizableSys/LogoImage";
    private static final String UPLOAD_DIRECTORY = "LogoImage";
    // 上传配置
    private static final int MEMORY_THRESHOLD   = 1024 * 1024 * 3;  // 3MB
    private static final int MAX_FILE_SIZE      = 1024 * 1024 * 4; // 40MB
    private static final int MAX_REQUEST_SIZE   = 1024 * 1024 * 5; // 50MB
 
    
    /**
     * 上传数据及保存文件
     */
    protected void doPost(HttpServletRequest request,
        HttpServletResponse response) throws ServletException, IOException {
    	response.setCharacterEncoding("utf-8");
		response.setContentType("text/html");
	 	//创建json对象
		JSONObject json=new JSONObject();
		//创建数据库操作对象
		DbConn db=Dbhelper.getDb();
		HttpSession session=request.getSession();    	
        // 检测是否为多媒体上传
        if (!ServletFileUpload.isMultipartContent(request)) {
            // 如果不是则停止
           PrintWriter writer = response.getWriter();
            writer.println("Error: 表单必须包含 enctype=multipart/form-data");
            writer.flush();
            return;
        	
        }
        
        // 配置上传参数
        DiskFileItemFactory factory = new DiskFileItemFactory();
        // 设置内存临界值 - 超过后将产生临时文件并存储于临时目录中
        factory.setSizeThreshold(MEMORY_THRESHOLD);
        // 设置临时存储目录
        factory.setRepository(new File(System.getProperty("java.io.tmpdir")));
 
        ServletFileUpload upload = new ServletFileUpload(factory);
         
        // 设置最大文件上传值
        upload.setFileSizeMax(MAX_FILE_SIZE);
         
        // 设置最大请求值 (包含文件和表单数据)
        upload.setSizeMax(MAX_REQUEST_SIZE);

        // 中文处理
        upload.setHeaderEncoding("UTF-8"); 

        // 构造临时路径来存储上传的文件
        // 这个路径相对当前应用的目录
        //String basePath ="E:/eclipseWorkspace/.metadata/allProjUpload";
        String basePath=request.getServletContext().getRealPath("./") + File.separator;  
        String uploadPath = basePath+UPLOAD_DIRECTORY;
            		   		  	     
        // 如果目录不存在则创建
        File uploadDir = new File(uploadPath);
        if (!uploadDir.exists()) {
            uploadDir.mkdir();
        }
 
        try {
            // 解析请求的内容提取文件数据
            //@SuppressWarnings("unchecked")
            List<FileItem> formItems = upload.parseRequest(request);
 
            if (formItems != null && formItems.size() > 0) {
                // 迭代表单数据
                for (FileItem item : formItems) {
                    // 处理不在表单中的字段
                    if (!item.isFormField()) {
                    String fileName = new File(item.getName()).getName();                       
                	System.out.print("fileName="+fileName);
                	if("".equals(fileName)) {
                		json.put("msg", "请选择上传图片");
                	}else {                		                 		
                        String filePath = uploadPath + File.separator + fileName;                        
                        File storeFile = new File(filePath);
                        // 在控制台输出文件的上传路径                      
                        System.out.println(";filePath="+filePath);                       
                       
                        // 保存文件到硬盘
                        item.write(storeFile);  
                       // String imgPath="url(/allProjUpload/customizableSys/LogoImage/"+fileName+")";
                        String imgPath="url("+UPLOAD_DIRECTORY+"/"+fileName+")";
                        int bls=db.executeUpdate("update indexshow set imgPath='"+imgPath+"' where id="+1);
        				if(bls>0){
        					json.put("msg", "修改成功");
        				}else{
        					json.put("msg", "修改失败");
        				}
                        
                	}               	                                                          
                    }
                }
            }
        } catch (Exception ex) {
        	json.put("msg", "错误信息:"+ex.getMessage());
            //request.setAttribute("message",
            //        "错误信息: " + ex.getMessage());        	   
        }       
        PrintWriter out=response.getWriter();
		out.print(json.toString());		  
		out.flush();
		out.close();        
    }
}